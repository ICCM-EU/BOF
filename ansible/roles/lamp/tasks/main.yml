---
- name: "Prepare Node.js"
  shell: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
  args:
    creates: /etc/apt/sources.list.d/nodesource.list

- name: "Install Apache"
  apt:
    pkg: ['apache2', 'libapache2-mod-php', 'php', 'php-mysql', 'python3-mysqldb', 'mariadb-server', 'php-zip', 'ca-certificates', 'composer', 'php-xml', 'php-mbstring', 'nodejs']
    state: present

- name: "Install Packages required for Testing"
  apt:
    pkg: ['php-xdebug', 'php-pdo-sqlite']
    state: present
  when: dev is defined

- name: "Set up the logs directory"
  file:
    path: "{{ web_directory }}/logs"
    state: directory
    mode: "a+w"

- name: stat example settings
  stat: path="{{ web_directory }}/cfg/settings-example.php"
  register: example_settings_stat

- name: Config Database connection
  command: cp "{{ web_directory }}/cfg/settings-example.php" "{{ web_directory }}/cfg/settings.php"
  when: example_settings_stat.stat.exists

- name: "install composer modules"
  composer:
    command: install
    working_dir: "{{ web_directory }}/src/"

# same as running: npm install
- name: "install npm modules"
  npm:
    path: "{{ web_directory }}"
    state: latest

# to bundle frontend items properly run:
- name: "bundle frontend items"
  shell: node_modules/.bin/gulp deploy
  args:
     chdir: "{{ web_directory }}"

- mysql_user:
    name: "{{ mysql_dummy_user }}"
    password: "{{ mysql_dummy_pass }}"
    priv: '*.*:ALL'
    state: present

- name: check if DB exists
  shell: mysql -h localhost -u myuser -pmypwd -e 'SHOW DATABASES;' | grep {{ mysql_dummy_db }}
  register: dbstatus
  failed_when: dbstatus.rc == 2

- name: "Create DB"
  command: mysql -h localhost -u {{ mysql_dummy_user }} -p{{ mysql_dummy_pass }} -e "CREATE DATABASE {{ mysql_dummy_db }}"
  when: dbstatus.rc == 1

- name: "Load DB structure"
  shell: |
    mysql -h localhost -u {{ mysql_dummy_user }} -p{{ mysql_dummy_pass }} {{ mysql_dummy_db }} < "{{ web_directory }}/sql/createtables.sql"
  when: dbstatus.rc == 1

- name: "Load DB initial data"
  shell: |
    mysql -h localhost -u {{ mysql_dummy_user }} -p{{ mysql_dummy_pass }} {{ mysql_dummy_db }} < "{{ web_directory }}/sql/initialdata.sql"
  when: dbstatus.rc == 1

- name: "apache config"
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent

- template:
    src: ../templates/bof.j2
    dest: /etc/apache2/sites-enabled/bof.conf

- name: "Enable apache mod_expires"
  command: a2enmod expires
  become: true

- name: "Enable apache mod_rewrite"
  command: a2enmod rewrite
  become: true

- name: "reload apache"
  service:
    name: apache2
    state: restarted
